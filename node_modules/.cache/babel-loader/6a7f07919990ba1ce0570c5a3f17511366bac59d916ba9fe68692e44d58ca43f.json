{"ast":null,"code":"import { supabase } from './supabase';\n\n// Funções para gerenciar agendamentos\nexport const bookingService = {\n  // Salvar novo agendamento\n  async createBooking(bookingData) {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('bookings').insert([bookingData]).select();\n      if (error) throw error;\n      return data[0];\n    } catch (error) {\n      console.error('Erro ao criar agendamento:', error);\n      throw error;\n    }\n  },\n  // Buscar todos os agendamentos\n  async getAllBookings() {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('bookings').select('*').order('date', {\n        ascending: true\n      });\n      if (error) throw error;\n      return data || [];\n    } catch (error) {\n      console.error('Erro ao buscar agendamentos:', error);\n      return [];\n    }\n  },\n  // Atualizar status do agendamento\n  async updateBookingStatus(id, status) {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('bookings').update({\n        status\n      }).eq('id', id).select();\n      if (error) throw error;\n      return data[0];\n    } catch (error) {\n      console.error('Erro ao atualizar agendamento:', error);\n      throw error;\n    }\n  },\n  // Excluir agendamento\n  async deleteBooking(id) {\n    try {\n      const {\n        error\n      } = await supabase.from('bookings').delete().eq('id', id);\n      if (error) throw error;\n      return true;\n    } catch (error) {\n      console.error('Erro ao excluir agendamento:', error);\n      throw error;\n    }\n  }\n};\n\n// Funções para gerenciar configurações\nexport const configService = {\n  // Salvar configuração de horários\n  async saveScheduleConfig(config) {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('schedule_config').upsert([{\n        id: 1,\n        config\n      }]).select();\n      if (error) throw error;\n      return data[0];\n    } catch (error) {\n      console.error('Erro ao salvar configuração:', error);\n      throw error;\n    }\n  },\n  // Buscar configuração de horários\n  async getScheduleConfig() {\n    try {\n      const {\n        data,\n        error\n      } = await supabase.from('schedule_config').select('config').eq('id', 1).single();\n      if (error && error.code !== 'PGRST116') throw error;\n      return (data === null || data === void 0 ? void 0 : data.config) || null;\n    } catch (error) {\n      console.error('Erro ao buscar configuração:', error);\n      return null;\n    }\n  }\n};","map":{"version":3,"names":["supabase","bookingService","createBooking","bookingData","data","error","from","insert","select","console","getAllBookings","order","ascending","updateBookingStatus","id","status","update","eq","deleteBooking","delete","configService","saveScheduleConfig","config","upsert","getScheduleConfig","single","code"],"sources":["C:/Users/Estudo/raquel-pinheiro-site/src/database.js"],"sourcesContent":["import { supabase } from './supabase'\r\n\r\n// Funções para gerenciar agendamentos\r\nexport const bookingService = {\r\n  // Salvar novo agendamento\r\n  async createBooking(bookingData) {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('bookings')\r\n        .insert([bookingData])\r\n        .select()\r\n      \r\n      if (error) throw error\r\n      return data[0]\r\n    } catch (error) {\r\n      console.error('Erro ao criar agendamento:', error)\r\n      throw error\r\n    }\r\n  },\r\n\r\n  // Buscar todos os agendamentos\r\n  async getAllBookings() {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('bookings')\r\n        .select('*')\r\n        .order('date', { ascending: true })\r\n      \r\n      if (error) throw error\r\n      return data || []\r\n    } catch (error) {\r\n      console.error('Erro ao buscar agendamentos:', error)\r\n      return []\r\n    }\r\n  },\r\n\r\n  // Atualizar status do agendamento\r\n  async updateBookingStatus(id, status) {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('bookings')\r\n        .update({ status })\r\n        .eq('id', id)\r\n        .select()\r\n      \r\n      if (error) throw error\r\n      return data[0]\r\n    } catch (error) {\r\n      console.error('Erro ao atualizar agendamento:', error)\r\n      throw error\r\n    }\r\n  },\r\n\r\n  // Excluir agendamento\r\n  async deleteBooking(id) {\r\n    try {\r\n      const { error } = await supabase\r\n        .from('bookings')\r\n        .delete()\r\n        .eq('id', id)\r\n      \r\n      if (error) throw error\r\n      return true\r\n    } catch (error) {\r\n      console.error('Erro ao excluir agendamento:', error)\r\n      throw error\r\n    }\r\n  }\r\n}\r\n\r\n// Funções para gerenciar configurações\r\nexport const configService = {\r\n  // Salvar configuração de horários\r\n  async saveScheduleConfig(config) {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('schedule_config')\r\n        .upsert([{ id: 1, config }])\r\n        .select()\r\n      \r\n      if (error) throw error\r\n      return data[0]\r\n    } catch (error) {\r\n      console.error('Erro ao salvar configuração:', error)\r\n      throw error\r\n    }\r\n  },\r\n\r\n  // Buscar configuração de horários\r\n  async getScheduleConfig() {\r\n    try {\r\n      const { data, error } = await supabase\r\n        .from('schedule_config')\r\n        .select('config')\r\n        .eq('id', 1)\r\n        .single()\r\n      \r\n      if (error && error.code !== 'PGRST116') throw error\r\n      return data?.config || null\r\n    } catch (error) {\r\n      console.error('Erro ao buscar configuração:', error)\r\n      return null\r\n    }\r\n  }\r\n}\r\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,YAAY;;AAErC;AACA,OAAO,MAAMC,cAAc,GAAG;EAC5B;EACA,MAAMC,aAAaA,CAACC,WAAW,EAAE;IAC/B,IAAI;MACF,MAAM;QAAEC,IAAI;QAAEC;MAAM,CAAC,GAAG,MAAML,QAAQ,CACnCM,IAAI,CAAC,UAAU,CAAC,CAChBC,MAAM,CAAC,CAACJ,WAAW,CAAC,CAAC,CACrBK,MAAM,CAAC,CAAC;MAEX,IAAIH,KAAK,EAAE,MAAMA,KAAK;MACtB,OAAOD,IAAI,CAAC,CAAC,CAAC;IAChB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdI,OAAO,CAACJ,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACA,MAAMK,cAAcA,CAAA,EAAG;IACrB,IAAI;MACF,MAAM;QAAEN,IAAI;QAAEC;MAAM,CAAC,GAAG,MAAML,QAAQ,CACnCM,IAAI,CAAC,UAAU,CAAC,CAChBE,MAAM,CAAC,GAAG,CAAC,CACXG,KAAK,CAAC,MAAM,EAAE;QAAEC,SAAS,EAAE;MAAK,CAAC,CAAC;MAErC,IAAIP,KAAK,EAAE,MAAMA,KAAK;MACtB,OAAOD,IAAI,IAAI,EAAE;IACnB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdI,OAAO,CAACJ,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpD,OAAO,EAAE;IACX;EACF,CAAC;EAED;EACA,MAAMQ,mBAAmBA,CAACC,EAAE,EAAEC,MAAM,EAAE;IACpC,IAAI;MACF,MAAM;QAAEX,IAAI;QAAEC;MAAM,CAAC,GAAG,MAAML,QAAQ,CACnCM,IAAI,CAAC,UAAU,CAAC,CAChBU,MAAM,CAAC;QAAED;MAAO,CAAC,CAAC,CAClBE,EAAE,CAAC,IAAI,EAAEH,EAAE,CAAC,CACZN,MAAM,CAAC,CAAC;MAEX,IAAIH,KAAK,EAAE,MAAMA,KAAK;MACtB,OAAOD,IAAI,CAAC,CAAC,CAAC;IAChB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdI,OAAO,CAACJ,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACtD,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACA,MAAMa,aAAaA,CAACJ,EAAE,EAAE;IACtB,IAAI;MACF,MAAM;QAAET;MAAM,CAAC,GAAG,MAAML,QAAQ,CAC7BM,IAAI,CAAC,UAAU,CAAC,CAChBa,MAAM,CAAC,CAAC,CACRF,EAAE,CAAC,IAAI,EAAEH,EAAE,CAAC;MAEf,IAAIT,KAAK,EAAE,MAAMA,KAAK;MACtB,OAAO,IAAI;IACb,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdI,OAAO,CAACJ,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpD,MAAMA,KAAK;IACb;EACF;AACF,CAAC;;AAED;AACA,OAAO,MAAMe,aAAa,GAAG;EAC3B;EACA,MAAMC,kBAAkBA,CAACC,MAAM,EAAE;IAC/B,IAAI;MACF,MAAM;QAAElB,IAAI;QAAEC;MAAM,CAAC,GAAG,MAAML,QAAQ,CACnCM,IAAI,CAAC,iBAAiB,CAAC,CACvBiB,MAAM,CAAC,CAAC;QAAET,EAAE,EAAE,CAAC;QAAEQ;MAAO,CAAC,CAAC,CAAC,CAC3Bd,MAAM,CAAC,CAAC;MAEX,IAAIH,KAAK,EAAE,MAAMA,KAAK;MACtB,OAAOD,IAAI,CAAC,CAAC,CAAC;IAChB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdI,OAAO,CAACJ,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpD,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACA,MAAMmB,iBAAiBA,CAAA,EAAG;IACxB,IAAI;MACF,MAAM;QAAEpB,IAAI;QAAEC;MAAM,CAAC,GAAG,MAAML,QAAQ,CACnCM,IAAI,CAAC,iBAAiB,CAAC,CACvBE,MAAM,CAAC,QAAQ,CAAC,CAChBS,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CACXQ,MAAM,CAAC,CAAC;MAEX,IAAIpB,KAAK,IAAIA,KAAK,CAACqB,IAAI,KAAK,UAAU,EAAE,MAAMrB,KAAK;MACnD,OAAO,CAAAD,IAAI,aAAJA,IAAI,uBAAJA,IAAI,CAAEkB,MAAM,KAAI,IAAI;IAC7B,CAAC,CAAC,OAAOjB,KAAK,EAAE;MACdI,OAAO,CAACJ,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpD,OAAO,IAAI;IACb;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}